@startuml
    participant "Pathoplexus Frontend / User" as frontend #LightCyan
    participant "(Pre-)Processing Pipeline" as processing #LightGreen
    participant "Pathoplexus Backend" as backend #Orange
    database "Database" as DB

    frontend -> backend: submit initial sequence data
    alt Sequence and Metadata Files are valid
        backend -> frontend: response with sequenceIds
        backend -> DB: Store initial sequence data
        backend -> DB: set status to 'RECEIVED'
    else Sequence and Metadata Files are invalid
        backend -> frontend: response with error
    end

   note right of frontend
      In the following we assume initial raw data are valid
   end note

    loop until no processing errors

        processing -> backend: Query initial/reviewed data
        backend -> DB: Query initial/reviewed data
        backend -> DB: Set status from 'RECEIVED'/'REVIEW_NEEDED' to 'PROCESSING'
        DB --> backend: initial/reviewed data
        backend --> processing: initial/reviewed data

        processing -> backend: submit processed sequence data
        alt validation errors occur
            backend -> processing: response with validation errors
            backend -> frontend: inform about internal error
             note right of frontend
                  Validation error are probably only redeemable by changing the pre-processing pipeline
                  In the following we assume that no validation error occurred
               end note
        end loop

        alt processed data contain processing errors
            backend -> DB: Store processed sequence data with errors
            backend -> DB: set status to 'REVIEW_NEEDED'
        else
            backend -> DB: Store processed sequence data without errors
            backend -> DB: set status to 'PROCESSED'
        end
         frontend -> backend: query processed data with errors
        frontend -> frontend: address errors and adapt data

        frontend -> backend: submit adapted data
        backend -> DB: store adapted data
        backend -> DB: set status to 'REVIEWED'
    end loop


    frontend -> backend: Query processed data
    backend -> DB: Query processed data
    DB --> backend: processed data
    backend --> frontend: processed data
    alt user approves processing
        frontend -> backend: approve processing
        backend -> DB: set status from 'PROCESSED' to 'SILO_READY'
    end
@enduml

