---
import { getData, SearchStatus } from './search';
import { ErrorFeedback } from '../../components/SearchPage/ErrorFeedback';
import { SearchForm } from '../../components/SearchPage/SearchForm';
import { Table } from '../../components/SearchPage/Table';
import { getAutoCompletionList, getConfig } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import type { Filter } from '../../types';

const config = getConfig();
const getSearchParams = (field: string): string => {
    const searchParameter = Astro.url.searchParams.get(field);
    return searchParameter === null ? '' : searchParameter;
};

const autoCompletions = await getAutoCompletionList();

const metadataSettings: Filter[] = config.schema.metadata.flatMap((metadata) => {
    if (metadata.type === 'date') {
        const metadataFrom = {
            ...metadata,
            name: `${metadata.name}From`,
            filter: getSearchParams(`${metadata.name}From`),
        };
        const metadataTo = {
            ...metadata,
            name: `${metadata.name}To`,
            filter: getSearchParams(`${metadata.name}To`),
        };
        return [metadataFrom, metadataTo];
    } else {
        const metadataSetting: Filter = {
            ...metadata,
            filter: getSearchParams(metadata.name),
        };
        if (autoCompletions.completions !== undefined) {
            metadataSetting.options = autoCompletions.completions[metadata.name];
        }
        return [metadataSetting];
    }
});

const data =
    Astro.url.searchParams.get('search') === 'true'
        ? await getData(metadataSettings)
        : { status: SearchStatus.READY, data: [] };
---

<BaseLayout title='Search'>
    <h1 class='title'>Search</h1>
    <div>
        {
            data.status === SearchStatus.ERROR ? (
                <ErrorFeedback message='Error while fetching data' client:only='react' />
            ) : null
        }

        <SearchForm metadataSettings={metadataSettings} client:only='react' />

        <div class='mt-5'>
            {data.status === SearchStatus.OK ? <Table data={data.data} config={config} client:only='react' /> : null}
        </div>
    </div>
</BaseLayout>
