---
import { getData, SearchStatus } from './search';
import { ErrorFeedback } from '../../components/SearchPage/ErrorFeedback';
import { SearchForm } from '../../components/SearchPage/SearchForm';
import { Table } from '../../components/SearchPage/Table';
import { getConfig, type Filter } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { titleClass } from '../../styles/theme';

const config = getConfig();
const getSearchParams = (field: string): string => {
    const searchParameter = Astro.url.searchParams.get(field);
    return searchParameter === null ? '' : searchParameter;
};

const metadataSettings: Filter[] = config.schema.metadata.map((metadata) => ({
    ...metadata,
    filter: getSearchParams(metadata.name),
}));

const data =
    Astro.url.searchParams.get('search') === 'true'
        ? await getData(metadataSettings)
        : { status: SearchStatus.OK, data: [] };
---

<BaseLayout title='Search'>
    <h1 class={titleClass}>Search</h1>
    <div>
        <SearchForm metadataSettings={metadataSettings} client:only='react' />
        {data.status !== SearchStatus.OK ? <ErrorFeedback client:only='react' /> : null}
        <Table data={data.data} config={config} client:load />
    </div>
</BaseLayout>
