---
import { sentenceCase } from 'change-case';

import { fetchSequenceDetails } from '../../api';
import { BackButton } from '../../components/Navigation/BackButton';
import { ErrorFeedback } from '../../components/SearchPage/ErrorFeedback';
import { SequencesContainer } from '../../components/SequenceDetailsPage/SequencesContainer';
import { getConfig, getReferenceGenomes } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';

const config = getConfig();
const { accession } = Astro.params;

// accession is never undefined, but ESLint doesn't know that
// eslint-disable-next-line
const data = await fetchSequenceDetails(accession!, config);

const genes = getReferenceGenomes().genes.map((g) => g.name);
const versionPage = `/sequences/${accession}/versions`;
---

<BaseLayout title={accession}>
    {
        data === undefined ? (
            <>
                <ErrorFeedback message='Error while fetching sequence data' client:only='react' />
                <div class='flex items-center'>
                    <BackButton marginRight={2} client:load />
                    <h1 class='subtitle'>No sequence found with accession: {accession}</h1>
                </div>
            </>
        ) : (
            <>
                <div class='flex items-center'>
                    <BackButton marginRight={2} client:load />
                    <h1 class='title'>Sequence {data[config.schema.primaryKey]}</h1>
                    <a href={versionPage} class='text-xs ml-10'>
                        (See previous versions)
                    </a>
                </div>
                <div class='mt-10'>
                    <table class='table-auto'>
                        <tbody>
                            {config.schema.metadata.map((metadata) => (
                                <tr>
                                    <td class='font-semibold pr-4'>{sentenceCase(metadata.name)}:</td>
                                    <td class='break-all overflow-wrap-break-word'>{data[metadata.name] ?? 'N/A'}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
                <div class='mt-10'>
                    <SequencesContainer client:load accession={accession ?? ''} config={config} genes={genes} />
                </div>
            </>
        )
    }
</BaseLayout>
