---
import { getReviewData } from './getReviewData';
import { BackButton } from '../../../../components/Navigation/BackButton';
import BaseLayout from '../../../../layouts/BaseLayout.astro';

// eslint-disable-next-line
const id = Astro.params.id!;
// eslint-disable-next-line
const username = Astro.params.username!;

const reviewDataOfUser = await getReviewData(username);
const reviewData = reviewDataOfUser.find((review) => review.sequenceId.toString() === id);
---

<BaseLayout title={`Review ${id}`}>
    {
        reviewData === undefined ? (
            <div class='flex items-center'>
                <BackButton marginRight={2} client:load />
                <h1 class='subtitle'>No review found with ID: {id}</h1>
            </div>
        ) : (
            <>
                <div class='flex items-center'>
                    <BackButton marginRight={2} client:load />
                    <h1 class='title'>Review for ID: {id}</h1>
                </div>
                <div class='mt-10'>
                    <table class='table-auto'>
                        <tbody>
                            <tr>
                                <td class='font-semibold pr-4'>Metadata</td>
                                <td />
                            </tr>
                            {Object.entries(reviewData.data.metadata).map(([key, value]) => (
                                <tr>
                                    <td class='pr-4 align-top'>{key}:</td>
                                    <td class='break-normal'>{JSON.stringify(value, null, '\t')}</td>
                                </tr>
                            ))}
                            <tr>
                                <td class='font-semibold pr-4 pt-2'>Unaligned Nucleotide Sequences</td>
                                <td />
                            </tr>

                            <tr>
                                <td class='pr-4 align-top'>main:</td>
                                <td class='break-normal'>{reviewData.data.unalignedNucleotideSequences.main}</td>
                            </tr>

                            <tr>
                                <td class='font-semibold pr-4 mt-2'>Errors</td>
                                <td />
                            </tr>
                            {Object.values(reviewData.errors).map((error) => (
                                <tr>
                                    <td class='pr-4 align-top'>{error.source.name}:</td>
                                    <td class='break-normal'>{error.message}</td>
                                </tr>
                            ))}
                            <tr>
                                <td class='font-semibold pr-4 mt-2'>Warnings</td>
                                <td />
                            </tr>
                            <tr>
                                <td> </td>
                            </tr>
                            {Object.values(reviewData.warnings).map((warning) => (
                                <tr>
                                    <td class='pr-4 align-top'>{warning.source.name}:</td>
                                    <td class='break-normal'>{warning.message}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            </>
        )
    }
</BaseLayout>
